 // DOM elements
    const menuButton = document.getElementById('menuButton');
    const overlay = document.getElementById('overlay');
    const body = document.body;
    const yearElement = document.getElementById('year');
    
    // Set current year in footer
    if (yearElement) {
      yearElement.textContent = new Date().getFullYear();
    }
    
    // Toggle mobile menu
    const toggleMenu = () => {
      const isOpen = overlay.getAttribute('aria-hidden') === 'false';
      
      // Toggle menu visibility
      overlay.setAttribute('aria-hidden', isOpen);
      menuButton.setAttribute('aria-expanded', !isOpen);
      
      // Toggle classes for animations
      overlay.classList.toggle('overlay--open');
      menuButton.classList.toggle('menu-button--open');
      body.classList.toggle('body--no-scroll');
    };
    
    // Close menu when clicking on links or outside
    const closeMenu = (e) => {
      if (e.target.tagName === 'A' || e.target === overlay) {
        overlay.setAttribute('aria-hidden', 'true');
        menuButton.setAttribute('aria-expanded', 'false');
        
        overlay.classList.remove('overlay--open');
        menuButton.classList.remove('menu-button--open');
        body.classList.remove('body--no-scroll');
      }
    };
    
    // Close menu on Escape key
    const handleEscapeKey = (e) => {
      if (e.key === 'Escape' && overlay.getAttribute('aria-hidden') === 'false') {
        overlay.setAttribute('aria-hidden', 'true');
        menuButton.setAttribute('aria-expanded', 'false');
        
        overlay.classList.remove('overlay--open');
        menuButton.classList.remove('menu-button--open');
        body.classList.remove('body--no-scroll');
      }
    };
    
    // Event listeners
    menuButton.addEventListener('click', toggleMenu);
    overlay.addEventListener('click', closeMenu);
    document.addEventListener('keydown', handleEscapeKey);
    /*========================================
  REUSABLE NAVBAR & FOOTER JAVASCRIPT
  Handles mobile menu, scroll effects, and interactions
========================================*/

(function() {
    'use strict';

    // Wait for DOM to be ready
    document.addEventListener('DOMContentLoaded', function() {

        // ===== AUTO-UPDATE YEAR IN FOOTER =====
        const yearElement = document.getElementById('year');
        if (yearElement) {
            yearElement.textContent = new Date().getFullYear();
        }

        // ===== NAVBAR SCROLL EFFECT =====
        const navbar = document.getElementById('siteNavbar');

        function handleNavbarScroll() {
            if (!navbar) return;

            if (window.scrollY > 10) {
                navbar.classList.add('nav-scrolled');
            } else {
                navbar.classList.remove('nav-scrolled');
            }
        }

        // Add scroll listener
        window.addEventListener('scroll', handleNavbarScroll, { passive: true });
        // Initial check
        handleNavbarScroll();

        // ===== MOBILE MENU FUNCTIONALITY =====
        const mobileToggle = document.getElementById('mobileMenuToggle');
        const mobileOverlay = document.getElementById('mobileOverlay');
        const overlayClose = document.getElementById('overlayClose');

        function openMobileMenu() {
            if (mobileOverlay && mobileToggle) {
                mobileOverlay.classList.add('show');
                mobileToggle.classList.add('open');
                document.body.style.overflow = 'hidden';
            }
        }

        function closeMobileMenu() {
            if (mobileOverlay && mobileToggle) {
                mobileOverlay.classList.remove('show');
                mobileToggle.classList.remove('open');
                document.body.style.overflow = '';
            }
        }

        // Mobile menu event listeners
        if (mobileToggle) {
            mobileToggle.addEventListener('click', openMobileMenu);
        }

        if (overlayClose) {
            overlayClose.addEventListener('click', closeMobileMenu);
        }

        // Close menu when clicking on mobile nav links
        const mobileNavLinks = document.querySelectorAll('.mobile-nav a');
        mobileNavLinks.forEach(link => {
            link.addEventListener('click', function() {
                // Small delay to allow navigation to start
                setTimeout(closeMobileMenu, 100);
            });
        });

        // Close mobile menu on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && mobileOverlay && mobileOverlay.classList.contains('show')) {
                closeMobileMenu();
            }
        });

        // ===== ACTIVE NAVIGATION LINK =====
        function setActiveNavLink() {
            const currentPage = window.location.pathname.split('/').pop() || 'index.html';
            const navLinks = document.querySelectorAll('.navbar-nav .nav-link, .mobile-nav a');

            navLinks.forEach(link => {
                const linkHref = link.getAttribute('href');
                link.classList.remove('active');

                // Check if current page matches link href
                if (linkHref === currentPage || 
                    (currentPage === '' && linkHref === 'index.html') ||
                    (currentPage === 'index.html' && linkHref === 'index.html')) {
                    link.classList.add('active');
                }
            });
        }

        // Set active link on page load
        setActiveNavLink();

        // ===== SMOOTH SCROLLING FOR ANCHOR LINKS =====
        const anchorLinks = document.querySelectorAll('a[href^="#"]');
        const navbarHeight = navbar ? navbar.offsetHeight : 80;

        anchorLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                const href = this.getAttribute('href');
                if (!href || href === '#') return;

                const target = document.querySelector(href);
                if (!target) return;

                e.preventDefault();

                const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - navbarHeight - 20;

                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });

                // Close mobile menu if open
                closeMobileMenu();
            });
        });

        // ===== BACK TO TOP BUTTON =====
        const backToTopButton = document.getElementById('backToTop');

        function handleBackToTopVisibility() {
            if (!backToTopButton) return;

            if (window.scrollY > 500) {
                backToTopButton.classList.add('show');
            } else {
                backToTopButton.classList.remove('show');
            }
        }

        // Back to top scroll listener
        window.addEventListener('scroll', handleBackToTopVisibility, { passive: true });

        // Back to top click handler
        if (backToTopButton) {
            backToTopButton.addEventListener('click', function() {
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            });
        }

        // Initial check for back to top button
        handleBackToTopVisibility();

        // ===== PERFORMANCE OPTIMIZATIONS =====

        // Throttle scroll events
        let scrollTimeout;
        let lastScrollY = window.scrollY;

        function optimizedScrollHandler() {
            const currentScrollY = window.scrollY;

            // Only process if scroll position actually changed
            if (currentScrollY !== lastScrollY) {
                handleNavbarScroll();
                handleBackToTopVisibility();
                lastScrollY = currentScrollY;
            }

            scrollTimeout = null;
        }

        // Replace existing scroll listeners with optimized version
        window.addEventListener('scroll', function() {
            if (!scrollTimeout) {
                scrollTimeout = requestAnimationFrame(optimizedScrollHandler);
            }
        }, { passive: true });

        // ===== ACCESSIBILITY ENHANCEMENTS =====

        // Keyboard navigation for mobile menu
        if (mobileToggle) {
            mobileToggle.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    openMobileMenu();
                }
            });
        }

        // Focus management for mobile overlay
        const focusableElements = 'a[href], button, textarea, input[type="text"], input[type="radio"], input[type="checkbox"], select';

        if (mobileOverlay) {
            mobileOverlay.addEventListener('shown', function() {
                const focusableContent = mobileOverlay.querySelectorAll(focusableElements);
                if (focusableContent.length > 0) {
                    focusableContent[0].focus();
                }
            });
        }

        // ===== CROSS-PAGE NAVIGATION HELPER =====

        // Helper function to navigate to a section on a different page
        window.navigateToSection = function(page, section) {
            if (window.location.pathname.includes(page)) {
                // We're already on the target page, just scroll to section
                const target = document.querySelector(section);
                if (target) {
                    const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - navbarHeight - 20;
                    window.scrollTo({
                        top: targetPosition,
                        behavior: 'smooth'
                    });
                }
            } else {
                // Navigate to the page with the section hash
                window.location.href = page + section;
            }
        };

        // ===== CONSOLE LOG FOR DEBUGGING =====
        console.log('Navbar & Footer components initialized successfully');
    });

})();
// contact.js
(function () {
  const $ = (s, r = document) => r.querySelector(s);
  const $$ = (s, r = document) => Array.from(r.querySelectorAll(s));

  // Mobile menu
  const menu = $('#mobile-menu');
  const toggle = $('.nav__toggle');
  const closeBtn = $('.nav__close');

  function openMenu() {
    menu.hidden = false;
    toggle.setAttribute('aria-expanded', 'true');
    document.body.style.overflow = 'hidden';
  }
  function closeMenu() {
    menu.hidden = true;
    toggle.setAttribute('aria-expanded', 'false');
    document.body.style.overflow = '';
  }

  if (toggle && menu) {
    toggle.addEventListener('click', openMenu);
  }
  if (closeBtn) {
    closeBtn.addEventListener('click', closeMenu);
  }
  $$('[data-nav-close]').forEach(a => {
    a.addEventListener('click', closeMenu);
  });

  // Accordion
  $$('.accordion__trigger').forEach(btn => {
    btn.addEventListener('click', () => {
      const expanded = btn.getAttribute('aria-expanded') === 'true';
      const contentId = btn.getAttribute('aria-controls');
      const panel = document.getElementById(contentId);
      btn.setAttribute('aria-expanded', String(!expanded));
      if (panel) {
        if (expanded) {
          panel.classList.remove('is-open');
          panel.setAttribute('hidden', '');
        } else {
          panel.removeAttribute('hidden');
          // force reflow to let animation run
          // eslint-disable-next-line no-unused-expressions
          panel.offsetHeight;
          panel.classList.add('is-open');
        }
      }
    });
  });

  // Form validation
  const form = $('#contact-form');
  const status = $('#form-status');
  const submitBtn = $('#submit-btn');

  function setError(id, msg) {
    const err = document.getElementById(`${id}-error`);
    const field = document.getElementById(id);
    if (err) { err.textContent = msg || ''; }
    if (field) {
      field.setAttribute('aria-invalid', msg ? 'true' : 'false');
    }
  }

  function validate() {
    let ok = true;

    const name = $('#name');
    if (!name.value.trim()) {
      setError('name', 'Name is required.');
      ok = false;
    } else {
      setError('name', '');
    }

    const email = $('#email');
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!email.value.trim()) {
      setError('email', 'Email is required.');
      ok = false;
    } else if (!re.test(email.value.trim())) {
      setError('email', 'Enter a valid email address.');
      ok = false;
    } else {
      setError('email', '');
    }

    const subject = $('#subject');
    if (!subject.value.trim()) {
      setError('subject', 'Subject is required.');
      ok = false;
    } else {
      setError('subject', '');
    }

    const message = $('#message');
    if (!message.value.trim()) {
      setError('message', 'Message is required.');
      ok = false;
    } else {
      setError('message', '');
    }

    return ok;
  }

  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      status.textContent = '';
      if (!validate()) return;

      submitBtn.disabled = true;
      submitBtn.textContent = 'Sending…';

      // Placeholder — integrate with backend/email service later (e.g., fetch to API)
      // Example:
      // const res = await fetch('/api/contact', { method: 'POST', body: new FormData(form) });

      setTimeout(() => {
        status.textContent = 'Thanks! Your message has been sent.';
        submitBtn.disabled = false;
        submitBtn.textContent = 'Send Message';
        form.reset();
      }, 800);
    });
  }
})();


